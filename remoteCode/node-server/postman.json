{
	"info": {
		"_postman_id": "ee566142-5966-4690-b0c9-aed31358f6d4",
		"name": "iMessageForwarder Protected Routes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "queue",
			"item": [
				{
					"name": "valid",
					"item": [
						{
							"name": "message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e74172e1-eed4-4d24-b1ba-7d605bc78e72",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Correct data received\", function () {",
											"    jsonTest = {",
											"        \"sent\": false,",
											"        \"row\": {",
											"            \"ROWID\": 1,",
											"            \"chat_id\": 1,",
											"            \"text\": \"Test message, do not delete.\"",
											"        }",
											"    }",
											"    pm.expect(pm.response.json()).to.eql(jsonTest);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:3001/queue/message/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"message",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "chat",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf997348-2b3c-4252-a556-ae2a8b7824ac",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Correct data received\", function () {",
											"    jsonTest = {",
											"        \"sent\": false,",
											"        \"row\": {",
											"            \"ROWID\": 1,",
											"            \"recipient_string\": \"Test groupstring\",",
											"            \"text\": \"Test message, do not delete.\"",
											"        }",
											"    }",
											"    pm.expect(pm.response.json()).to.eql(jsonTest);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:3001/queue/chat/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"chat",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a27f083-df2f-4164-b204-e8ce736f01a2",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Correct data received\", function () {",
											"    jsonTest = {",
											"        \"sent\": false,",
											"        \"row\": {",
											"            \"ROWID\": 1,",
											"            \"chat_id\": 1,",
											"            \"associated_guid\": \"TEST-MESS-AGE1\",",
											"            \"associated_type\": 2000",
											"        }",
											"    }",
											"    pm.expect(pm.response.json()).to.eql(jsonTest);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:3001/queue/reaction/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"reaction",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "rename",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "728ea298-e0b7-4c09-aec0-94395124fea1",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Correct data received\", function () {",
											"    jsonTest = {",
											"        \"sent\": false,",
											"        \"row\": {",
											"            \"ROWID\": 1,",
											"            \"chat_id\": 1,",
											"            \"group_title\": \"Test groupname\"",
											"        }",
											"    }",
											"    pm.expect(pm.response.json()).to.eql(jsonTest);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:3001/queue/rename/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"rename",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb3595d2-c726-4eb3-96bd-f257a62db86a",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Location header points to ROWID\", function() {",
											"  pm.expect(pm.response.headers.get('Location')).to.eql('/queue/message/' + pm.response.json().ROWID);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1,\n    \"text\": \"This is text.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/message",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"message"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "chat",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "91c59c64-26b5-4f14-885a-09e50e8f5306",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Location header points to ROWID\", function() {",
											"  pm.expect(pm.response.headers.get('Location')).to.eql('/queue/chat/' + pm.response.json().ROWID);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"recipient_string\": \"+15127913058\",\n    \"text\": \"This is text.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/chat",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"chat"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb1f5cd6-8292-4162-b014-17f545675b9b",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Location header points to ROWID\", function() {",
											"  pm.expect(pm.response.headers.get('Location')).to.eql('/queue/reaction/' + pm.response.json().ROWID);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1,\n    \"associated_guid\": \"ABCD-1234-EF01-5678\",\n    \"associated_type\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/reaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"reaction"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "rename",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea09c757-6099-45d3-9033-5fee24c8a183",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Location header points to ROWID\", function() {",
											"  pm.expect(pm.response.headers.get('Location')).to.eql('/queue/rename/' + pm.response.json().ROWID);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1,\n    \"group_title\": \"New name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/rename",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"rename"
									]
								},
								"description": "A basic request."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "invalid",
					"item": [
						{
							"name": "Bad ROWID message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6f47f3cd-1896-4c57-8d94-a3f84bd92970",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for malformed ROWID\", function () {",
											"    pm.expect(pm.response.json().error).to.eql('\"ROWID\" value must be an integer.');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:3001/queue/message/1notId",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"message",
										"1notId"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bad ROWID chat",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b4ef0cd3-3073-4130-b66f-50c20fcaf556",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for malformed ROWID\", function () {",
											"    pm.expect(pm.response.json().error).to.eql('\"ROWID\" value must be an integer.');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:3001/queue/chat/1notId",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"chat",
										"1notId"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bad ROWID reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6ccbb24e-8848-447e-b1ff-404297a38963",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for malformed ROWID\", function () {",
											"    pm.expect(pm.response.json().error).to.eql('\"ROWID\" value must be an integer.');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:3001/queue/reaction/1notId",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"reaction",
										"1notId"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bad ROWID rename",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d8202ec9-c542-4d2e-ae0f-0ba820c7024b",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for malformed ROWID\", function () {",
											"    pm.expect(pm.response.json().error).to.eql('\"ROWID\" value must be an integer.');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:3001/queue/rename/1notId",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"rename",
										"1notId"
									]
								}
							},
							"response": []
						},
						{
							"name": "HTTP message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ccb6cc67-951c-4d28-90e1-315ad87f328e",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1,\n    \"text\": \"This is text.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/queue/message",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"queue",
										"message"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "HTTP chat",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "870b1a7e-c45f-4e19-a1bd-8b3f95918793",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"recipient_string\": \"+15127913058\",\n    \"text\": \"This is text.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/queue/chat",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"queue",
										"chat"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "HTTP reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6afcafa-e716-40a3-ac27-333f24fabc3c",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1,\n    \"associated_guid\": \"ABCD-1234-EF01-5678\",\n    \"associated_type\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/queue/reaction",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"queue",
										"reaction"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "HTTP rename",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb1293a5-4156-4155-b7e5-6698e5de8c96",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1,\n    \"group_title\": \"New name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/queue/rename",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"queue",
										"rename"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "Missing chat_id message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b54d218b-ff9f-4166-93db-8345037b23ef",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"chat_id\" or \"text\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text\": \"This is text.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/message",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"message"
									]
								},
								"description": "Request with a missing chat_id key in the body."
							},
							"response": []
						},
						{
							"name": "Float chat_id message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7402ce5-022c-4381-9388-987b09c9fb84",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for invalid chat_id\", function () {",
											"    pm.response.json().error === '\"chat_id\" value must be an integer.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": \"1.2\",\n    \"text\": \"This is text.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/message",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"message"
									]
								},
								"description": "Request with a float chat_id value."
							},
							"response": []
						},
						{
							"name": "String chat_id message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a3b78d4-5be3-4773-beec-93b83bced6f5",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for invalid chat_id\", function () {",
											"    pm.response.json().error === '\"chat_id\" value must be an integer.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": \"1malformed input\",\n    \"text\": \"This is text.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/message",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"message"
									]
								},
								"description": "Request with a string chat_id value."
							},
							"response": []
						},
						{
							"name": "Missing text message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2590f547-4887-44ec-b2a0-b3cf642fe86e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"chat_id\" or \"text\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/message",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"message"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "Missing recipient_string chat",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a495a394-53df-465d-8812-e8bd252446d5",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"recipient_string\" or \"text\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text\": \"This is text.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/chat",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"chat"
									]
								},
								"description": "Request with a missing recipient_string key in the body."
							},
							"response": []
						},
						{
							"name": "Missing text chat",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6669841-fda2-4a75-9377-5e023cada602",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"recipient_string\" or \"text\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"recipient_string\": \"Recip 1, Recip2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/chat",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"chat"
									]
								},
								"description": "Request with a missing recipient_string key in the body."
							},
							"response": []
						},
						{
							"name": "Missing chat_id reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "84511d06-5829-4d70-95f7-deac6db8a52b",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"chat_id\", \"associated_guid\", or \"associated_type\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"associated_guid\": \"ABCD-1234-EF01-5678\",\n    \"associated_type\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/reaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"reaction"
									]
								},
								"description": "Request with a missing chat_id key in the body."
							},
							"response": []
						},
						{
							"name": "Float chat_id reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc2a230c-b342-4d46-b11b-a87a940141d8",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for invalid chat_id\", function () {",
											"    pm.response.json().error === '\"chat_id\" value must be an integer.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": \"1.2\",\n    \"associated_guid\": \"ABCD-1234-EF01-5678\",\n    \"associated_type\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/reaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"reaction"
									]
								},
								"description": "Request with a float chat_id value."
							},
							"response": []
						},
						{
							"name": "String chat_id reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43b00fe1-e1fd-43b5-bb3e-97d292fb74ee",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for invalid chat_id\", function () {",
											"    pm.response.json().error === '\"chat_id\" value must be an integer.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": \"1malformed input\",\n    \"associated_guid\": \"ABCD-1234-EF01-5678\",\n    \"associated_type\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/reaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"reaction"
									]
								},
								"description": "Request with a string chat_id value."
							},
							"response": []
						},
						{
							"name": "Missing associated_guid reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c440c3b-4b84-4d02-88ab-e6cd6558f448",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"chat_id\", \"associated_guid\", or \"associated_type\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1,\n    \"associated_type\": 2000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/reaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"reaction"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "Missing associated_type reaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e76bddd-ee3d-4663-8bcd-a1fb97639639",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"chat_id\", \"associated_guid\", or \"associated_type\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1,\n    \"associated_guid\": \"ABCD-1234-EF01-5678\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/reaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"reaction"
									]
								},
								"description": "A basic request."
							},
							"response": []
						},
						{
							"name": "Missing chat_id rename",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f88d6537-3e11-4b1e-84ab-166598bd1724",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"chat_id\", \"associated_guid\", or \"associated_type\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"group_title\": \"New name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/rename",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"rename"
									]
								},
								"description": "Request with a missing chat_id key in the body."
							},
							"response": []
						},
						{
							"name": "Float chat_id rename",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb6ece91-dd64-467d-98f9-24160124c727",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for invalid chat_id\", function () {",
											"    pm.response.json().error === '\"chat_id\" value must be an integer.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": \"1.2\",\n    \"group_title\": \"New name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/rename",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"rename"
									]
								},
								"description": "Request with a float chat_id value."
							},
							"response": []
						},
						{
							"name": "String chat_id rename",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e6ee7b6-3c93-4dec-b033-1ed2f93b75fb",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for invalid chat_id\", function () {",
											"    pm.response.json().error === '\"chat_id\" value must be an integer.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": \"1malformed input\",\n    \"group_title\": \"New name\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/rename",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"rename"
									]
								},
								"description": "Request with a string chat_id value."
							},
							"response": []
						},
						{
							"name": "Missing group_title rename",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7e11352-6855-4757-bbc2-2cf862f25efd",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message is for missing keys\", function () {",
											"    pm.response.json().error === 'Missing \"chat_id\", \"associated_guid\", or \"associated_type\" keys in request body.';",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"chat_id\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:3001/queue/rename",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "3001",
									"path": [
										"queue",
										"rename"
									]
								},
								"description": "A basic request."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "root",
			"item": [
				{
					"name": "HTTP ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b1b2f7c-3499-48ef-bea2-c8229398ef19",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/ping",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"ping"
							]
						}
					},
					"response": []
				},
				{
					"name": "HTTPS ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "251dcd87-ecc8-4825-95cc-f168fb870185",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:3001/ping",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}